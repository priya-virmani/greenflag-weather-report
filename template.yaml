AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: >
  Lambda Deployment Template
Resources:
  WeatherLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_function.lambda_handler
      FunctionName: weather-report-lambda
      Role: !GetAtt LambdaServiceRole.Arn
      CodeUri: s3://all-lambda-code-deploy-bucket/lambda_function.zip
      Runtime: python3.9
  LambdaServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LambdaServiceRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: AWSLambdaBasicExecutionRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'
  otherIAMRoles:
    Type: AWS::IAM::Role
    Properties:
      RoleName: otherIAMRoles
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: s3ReadWrite
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:*'
                Resource: 
                  - !Sub 'arn:aws:s3:::all-lambda-code-deploy-bucket'
        - PolicyName: dynamoDBReadWrite
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'dynamodb:*'
                Resource: 
                  - !Sub 'arn:aws:dynamodb:us-east-2:109598254717:table/weatherReport'
        - PolicyName: cloudWatchReadWrite
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:*'
                Resource: '*'
  lambdaInvokeEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "EventRule to Fire lambda"
      State: "ENABLED"
      EventPattern:
        source:
          - "aws.s3"
        detail:
          eventName:
            - "PutObject"
          requestParameters:
            bucketName: 
              - !Sub "all-lambda-code-deploy-bucket"
            key: 
              - "prefix": "data_files/"
      Targets:
        - Arn: !GetAtt WeatherLambda.Arn
          Id: "WeatherLambdaTarget"
  # permissionForEventsToInvokeLambda:
  #   Type: AWS::Lambda::Permission
  #   Properties:
  #     FunctionName: !GetAtt WeatherLambda.Arn
  #     Action: "lambda:InvokeFunction"
  #     Principal: "events.amazonaws.com"
  #     SourceArn: !GetAtt lambdaInvokeEventRule.Arn
